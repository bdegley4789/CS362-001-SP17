/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 17 08:01:45 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MatrixCalc_ESTest extends MatrixCalc_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 55 covered goals:
   * Goal 1. matrixInput([[III)[[I_java.util.InputMismatchException_IMPLICIT
   * Goal 2. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false
   * Goal 3. MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - false
   * Goal 4. Weak Mutation 146: MatrixCalc.matrixInput([[III)[[I:76 - ReplaceConstant - Enter whole numbers for the matrix -> 
   * Goal 5. Weak Mutation 147: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceConstant - 0 -> 1
   * Goal 6. Weak Mutation 148: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 7. Weak Mutation 149: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 8. Weak Mutation 150: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of i
   * Goal 9. Weak Mutation 151: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 i
   * Goal 10. Weak Mutation 152: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 i
   * Goal 11. Weak Mutation 153: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> col
   * Goal 12. Weak Mutation 154: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> i
   * Goal 13. Weak Mutation 155: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of row
   * Goal 14. Weak Mutation 156: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 row
   * Goal 15. Weak Mutation 157: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 row
   * Goal 16. Weak Mutation 158: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> -1
   * Goal 17. Weak Mutation 161: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 164: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> row
   * Goal 19. Weak Mutation 165: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of j
   * Goal 20. Weak Mutation 166: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 j
   * Goal 21. Weak Mutation 167: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 j
   * Goal 22. Weak Mutation 170: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> row
   * Goal 23. Weak Mutation 171: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of col
   * Goal 24. Weak Mutation 172: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 col
   * Goal 25. Weak Mutation 173: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 col
   * Goal 26. Weak Mutation 162: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> col
   * Goal 27. Weak Mutation 168: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> i
   * Goal 28. Weak Mutation 169: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> j
   * Goal 29. Weak Mutation 174: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 177: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant - Row:  -> 
   * Goal 31. Weak Mutation 178: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable i -> col
   * Goal 32. Weak Mutation 180: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable i -> row
   * Goal 33. Weak Mutation 181: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 182: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 183: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 184: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 185: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 186: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> -
   * Goal 39. Weak Mutation 187: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> *
   * Goal 40. Weak Mutation 188: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> /
   * Goal 41. Weak Mutation 189: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant -  Column:  -> 
   * Goal 42. Weak Mutation 190: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable j -> col
   * Goal 43. Weak Mutation 192: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable j -> row
   * Goal 44. Weak Mutation 193: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp Negation of j
   * Goal 45. Weak Mutation 194: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC 1 j
   * Goal 46. Weak Mutation 195: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC -1 j
   * Goal 47. Weak Mutation 196: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 197: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> %
   * Goal 49. Weak Mutation 198: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> -
   * Goal 50. Weak Mutation 199: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> *
   * Goal 51. Weak Mutation 200: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 201: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant -  =  -> 
   * Goal 53. [METHOD] MatrixCalc.matrixInput([[III)[[I
   * Goal 54. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 55. Branch MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - false in context: MatrixCalc:matrixInput([[III)[[I
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine("L%H2;)nxxC?D");
      int[][] intArray0 = new int[7][4];
      int[] intArray1 = new int[9];
      intArray1[0] = 3907;
      intArray1[1] = (-1237);
      intArray1[2] = 1379;
      intArray1[3] = 4838;
      intArray1[4] = (-1140);
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = (-1721);
      intArray1[8] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 4838;
      intArray2[1] = 0;
      intArray2[2] = 3907;
      intArray2[3] = 0;
      intArray2[4] = (-1721);
      intArray2[5] = 0;
      intArray2[6] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = 650;
      intArray3[2] = 1;
      intArray3[3] = 0;
      intArray3[4] = (-1237);
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 1;
      intArray4[1] = 3907;
      intArray4[2] = 1;
      intArray4[3] = 1379;
      intArray4[4] = (-1140);
      intArray4[5] = 1;
      intArray4[6] = (-1548);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 4838;
      intArray5[1] = (-1312);
      intArray5[2] = 650;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 3907;
      intArray6[1] = 0;
      intArray6[2] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[9];
      intArray7[0] = 4838;
      intArray7[1] = (-1874);
      intArray7[2] = 1;
      intArray7[3] = (-1548);
      intArray7[4] = (-1140);
      intArray7[5] = 3907;
      intArray7[6] = (-1312);
      intArray7[7] = 1;
      intArray7[8] = 1;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        MatrixCalc.matrixInput(intArray0, 1, 1379);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Scanner", e);
      }
  }

  //Test case number: 1
  /*
   * 184 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false
   * Goal 5. Weak Mutation 401: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> j
   * Goal 6. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 7. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 8. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 9. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 10. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 11. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 12. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 13. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 14. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 15. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 16. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 17. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 20. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 21. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 22. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 23. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 24. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 25. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 26. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 27. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 28. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 29. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 30. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 31. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 32. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 33. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 36. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 37. Weak Mutation 313: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 38. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 39. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 40. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 41. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 42. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 43. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 44. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 45. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 46. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 47. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 48. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 49. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 50. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 51. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 52. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 53. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 56. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 57. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 58. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 59. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 60. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 61. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 62. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 63. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 64. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 65. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 66. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 67. Weak Mutation 354: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> >
   * Goal 68. Weak Mutation 425: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m1
   * Goal 69. Weak Mutation 426: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m2
   * Goal 70. Weak Mutation 427: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row1
   * Goal 71. Weak Mutation 428: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> i
   * Goal 72. Weak Mutation 430: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col2
   * Goal 73. Weak Mutation 433: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of j
   * Goal 74. Weak Mutation 434: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 j
   * Goal 75. Weak Mutation 435: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 j
   * Goal 76. Weak Mutation 436: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row1
   * Goal 77. Weak Mutation 437: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> j
   * Goal 78. Weak Mutation 438: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> sum
   * Goal 79. Weak Mutation 439: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col2
   * Goal 80. Weak Mutation 440: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row2
   * Goal 81. Weak Mutation 441: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col1
   * Goal 82. Weak Mutation 442: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of i
   * Goal 83. Weak Mutation 443: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 i
   * Goal 84. Weak Mutation 444: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 i
   * Goal 85. Weak Mutation 445: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row1
   * Goal 86. Weak Mutation 446: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> i
   * Goal 87. Weak Mutation 448: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col2
   * Goal 88. Weak Mutation 451: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of sum
   * Goal 89. Weak Mutation 452: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 sum
   * Goal 90. Weak Mutation 453: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 sum
   * Goal 91. Weak Mutation 454: MatrixCalc.multiplyMatrices([[III[[III)[[I:116 - ReplaceConstant - 0 -> 1
   * Goal 92. Weak Mutation 455: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 93. Weak Mutation 456: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 94. Weak Mutation 457: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 95. Weak Mutation 458: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 96. Weak Mutation 459: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 97. Weak Mutation 460: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 98. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 99. Weak Mutation 336: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 100. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 101. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 102. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 103. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 104. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 105. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 106. Weak Mutation 353: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> -1
   * Goal 107. Weak Mutation 356: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row1
   * Goal 108. Weak Mutation 357: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> i
   * Goal 109. Weak Mutation 358: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> j
   * Goal 110. Weak Mutation 359: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> k
   * Goal 111. Weak Mutation 360: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col2
   * Goal 112. Weak Mutation 361: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row2
   * Goal 113. Weak Mutation 362: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col1
   * Goal 114. Weak Mutation 363: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of sum
   * Goal 115. Weak Mutation 364: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 sum
   * Goal 116. Weak Mutation 365: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 sum
   * Goal 117. Weak Mutation 367: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m3
   * Goal 118. Weak Mutation 368: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row1
   * Goal 119. Weak Mutation 370: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> sum
   * Goal 120. Weak Mutation 371: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> k
   * Goal 121. Weak Mutation 372: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col2
   * Goal 122. Weak Mutation 373: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row2
   * Goal 123. Weak Mutation 375: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of j
   * Goal 124. Weak Mutation 376: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 j
   * Goal 125. Weak Mutation 377: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 j
   * Goal 126. Weak Mutation 378: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 127. Weak Mutation 379: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 128. Weak Mutation 380: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 129. Weak Mutation 381: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 130. Weak Mutation 382: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 131. Weak Mutation 383: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 132. Weak Mutation 384: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 133. Weak Mutation 385: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 134. Weak Mutation 386: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 135. Weak Mutation 387: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 136. Weak Mutation 389: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m2 -> m3
   * Goal 137. Weak Mutation 390: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 138. Weak Mutation 391: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 139. Weak Mutation 392: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 140. Weak Mutation 393: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 141. Weak Mutation 394: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 142. Weak Mutation 395: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 143. Weak Mutation 396: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 144. Weak Mutation 397: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 145. Weak Mutation 398: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 146. Weak Mutation 399: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 147. Weak Mutation 400: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row1
   * Goal 148. Weak Mutation 402: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> sum
   * Goal 149. Weak Mutation 403: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> k
   * Goal 150. Weak Mutation 404: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col2
   * Goal 151. Weak Mutation 405: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row2
   * Goal 152. Weak Mutation 407: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of i
   * Goal 153. Weak Mutation 408: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 i
   * Goal 154. Weak Mutation 409: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 i
   * Goal 155. Weak Mutation 410: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> +
   * Goal 156. Weak Mutation 411: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> %
   * Goal 157. Weak Mutation 412: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> -
   * Goal 158. Weak Mutation 413: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> /
   * Goal 159. Weak Mutation 414: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> %
   * Goal 160. Weak Mutation 415: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> -
   * Goal 161. Weak Mutation 416: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> *
   * Goal 162. Weak Mutation 417: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> /
   * Goal 163. Weak Mutation 418: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 164. Weak Mutation 419: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 165. Weak Mutation 420: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 166. Weak Mutation 421: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 167. Weak Mutation 422: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 168. Weak Mutation 423: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 169. Weak Mutation 424: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 170. Weak Mutation 374: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col1
   * Goal 171. Weak Mutation 406: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col1
   * Goal 172. Weak Mutation 432: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col1
   * Goal 173. Weak Mutation 450: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col1
   * Goal 174. Weak Mutation 369: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> i
   * Goal 175. Weak Mutation 431: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row2
   * Goal 176. Weak Mutation 449: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row2
   * Goal 177. Weak Mutation 429: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> sum
   * Goal 178. Weak Mutation 447: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> j
   * Goal 179. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 180. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 181. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 182. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 183. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 184. multiplyMatrices([[III[[III)[[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[][] intArray0 = new int[6][1];
      int[] intArray1 = new int[4];
      intArray1[0] = (-2014);
      intArray1[1] = (-1);
      intArray1[2] = 263;
      intArray1[3] = (-199);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = (-1);
      intArray2[1] = (-2014);
      intArray2[2] = 263;
      intArray2[3] = (-199);
      intArray2[4] = (-2014);
      intArray2[5] = 1;
      intArray2[6] = 263;
      intArray2[7] = (-1);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = (-2014);
      intArray3[1] = 263;
      intArray3[2] = (-1);
      intArray3[3] = (-1);
      intArray3[4] = 1;
      intArray3[5] = (-199);
      intArray3[6] = 263;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = (-199);
      intArray4[1] = 1;
      intArray4[2] = 263;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 203;
      intArray5[1] = 1;
      intArray5[2] = 263;
      intArray5[3] = 263;
      intArray5[4] = (-2014);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = (-1);
      intArray6[1] = (-2014);
      intArray6[2] = 1;
      intArray6[3] = 1325;
      intArray6[4] = (-1);
      intArray6[5] = 1;
      intArray6[6] = 203;
      intArray6[7] = 1;
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray0, 260, 1, intArray0, 3, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 2
  /*
   * 118 covered goals:
   * Goal 1. main([Ljava/lang/String;)V_java.util.InputMismatchException_IMPLICIT
   * Goal 2. MatrixCalc.main([Ljava/lang/String;)V: root-Branch
   * Goal 3. MatrixCalc.inputs()[I: I19 Branch 1 IF_ICMPGE L37 - false
   * Goal 4. MatrixCalc.inputs()[I: I23 Branch 2 IFNE L38 - false
   * Goal 5. MatrixCalc.inputs()[I: I33 Branch 3 IF_ICMPNE L41 - true
   * Goal 6. MatrixCalc.inputs()[I: I43 Branch 4 IF_ICMPGE L44 - false
   * Goal 7. MatrixCalc.inputs()[I: I47 Branch 5 IFNE L45 - false
   * Goal 8. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true
   * Goal 9. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 10. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true
   * Goal 11. Weak Mutation 0: MatrixCalc.main([Ljava/lang/String;)V:10 - ReplaceConstant - Hello this program will multiply two matrices -> 
   * Goal 12. Weak Mutation 1: MatrixCalc.main([Ljava/lang/String;)V:11 - ReplaceConstant - 0 -> 1
   * Goal 13. Weak Mutation 2: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 0
   * Goal 14. Weak Mutation 3: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 1
   * Goal 15. Weak Mutation 4: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> -1
   * Goal 16. Weak Mutation 5: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 3
   * Goal 17. Weak Mutation 6: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 5
   * Goal 18. Weak Mutation 67: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 0
   * Goal 19. Weak Mutation 68: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 1
   * Goal 20. Weak Mutation 69: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> -1
   * Goal 21. Weak Mutation 70: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 3
   * Goal 22. Weak Mutation 71: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 5
   * Goal 23. Weak Mutation 72: MatrixCalc.inputs()[I:37 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 73: MatrixCalc.inputs()[I:37 - InsertUnaryOp Negation of i
   * Goal 25. Weak Mutation 74: MatrixCalc.inputs()[I:37 - InsertUnaryOp IINC 1 i
   * Goal 26. Weak Mutation 75: MatrixCalc.inputs()[I:37 - InsertUnaryOp IINC -1 i
   * Goal 27. Weak Mutation 76: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 0
   * Goal 28. Weak Mutation 77: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 1
   * Goal 29. Weak Mutation 78: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> -1
   * Goal 30. Weak Mutation 79: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 3
   * Goal 31. Weak Mutation 80: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 5
   * Goal 32. Weak Mutation 81: MatrixCalc.inputs()[I:37 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 84: MatrixCalc.inputs()[I:38 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 85: MatrixCalc.inputs()[I:38 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 86: MatrixCalc.inputs()[I:38 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 87: MatrixCalc.inputs()[I:38 - ReplaceComparisonOperator != -> -1
   * Goal 37. Weak Mutation 90: MatrixCalc.inputs()[I:39 - ReplaceConstant - Enter dimensions for 1st Matrix -> 
   * Goal 38. Weak Mutation 91: MatrixCalc.inputs()[I:41 - InsertUnaryOp Negation of i
   * Goal 39. Weak Mutation 92: MatrixCalc.inputs()[I:41 - InsertUnaryOp IINC 1 i
   * Goal 40. Weak Mutation 93: MatrixCalc.inputs()[I:41 - InsertUnaryOp IINC -1 i
   * Goal 41. Weak Mutation 94: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> 0
   * Goal 42. Weak Mutation 95: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> 1
   * Goal 43. Weak Mutation 96: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> -1
   * Goal 44. Weak Mutation 97: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> 3
   * Goal 45. Weak Mutation 100: MatrixCalc.inputs()[I:41 - ReplaceComparisonOperator != -> >
   * Goal 46. Weak Mutation 102: MatrixCalc.inputs()[I:44 - InsertUnaryOp Negation of i
   * Goal 47. Weak Mutation 103: MatrixCalc.inputs()[I:44 - InsertUnaryOp IINC 1 i
   * Goal 48. Weak Mutation 104: MatrixCalc.inputs()[I:44 - InsertUnaryOp IINC -1 i
   * Goal 49. Weak Mutation 105: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> 0
   * Goal 50. Weak Mutation 106: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> 1
   * Goal 51. Weak Mutation 107: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> -1
   * Goal 52. Weak Mutation 108: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> 3
   * Goal 53. Weak Mutation 109: MatrixCalc.inputs()[I:44 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 112: MatrixCalc.inputs()[I:45 - InsertUnaryOp Negation of i
   * Goal 55. Weak Mutation 113: MatrixCalc.inputs()[I:45 - InsertUnaryOp IINC 1 i
   * Goal 56. Weak Mutation 114: MatrixCalc.inputs()[I:45 - InsertUnaryOp IINC -1 i
   * Goal 57. Weak Mutation 115: MatrixCalc.inputs()[I:45 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 118: MatrixCalc.inputs()[I:46 - ReplaceConstant - Rows:  -> 
   * Goal 59. Weak Mutation 132: MatrixCalc.inputs()[I:57 - InsertUnaryOp Negation of i
   * Goal 60. Weak Mutation 133: MatrixCalc.inputs()[I:57 - InsertUnaryOp IINC 1 i
   * Goal 61. Weak Mutation 134: MatrixCalc.inputs()[I:57 - InsertUnaryOp IINC -1 i
   * Goal 62. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 63. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 64. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 65. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 66. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 67. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 68. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 69. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 70. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 71. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 72. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 73. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 75. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 76. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 77. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 78. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 79. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 80. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 81. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 82. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 83. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 84. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 85. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 86. Weak Mutation 308: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> >
   * Goal 87. Weak Mutation 466: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m1
   * Goal 88. Weak Mutation 467: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m2
   * Goal 89. Weak Mutation 292: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 90. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 91. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 92. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 93. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 94. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 95. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 96. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 97. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 98. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 99. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 100. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 101. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 102. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 103. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 104. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 105. Weak Mutation 330: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> >
   * Goal 106. Weak Mutation 461: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 107. Weak Mutation 462: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 108. Weak Mutation 463: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 109. Weak Mutation 464: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 110. Weak Mutation 465: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 111. [Output]: MatrixCalc.multiplyMatrices([[III[[III)[[I:EmptyArray
   * Goal 112. [METHOD] MatrixCalc.main([Ljava/lang/String;)V
   * Goal 113. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 114. [METHODNOEX] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 115. Branch MatrixCalc.main([Ljava/lang/String;)V: root-Branch in context: MatrixCalc:main([Ljava/lang/String;)V
   * Goal 116. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 117. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 118. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("l}i]W*.w]u4ZM_oJX4");
      MatrixCalc.multiplyMatrices((int[][]) null, 0, 0, (int[][]) null, 0, 257);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " = ";
      stringArray0[1] = "7a0-Q!Ruf3pt";
      stringArray0[2] = "{6jwM)~:4f";
      stringArray0[3] = "iv\"ArRSk+KLuU&";
      stringArray0[4] = "Hello this program will multiply two matrices";
      // Undeclared exception!
      try { 
        MatrixCalc.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Scanner", e);
      }
  }

  //Test case number: 3
  /*
   * 138 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 115
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 116
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 119
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 107
   * Goal 6. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 108
   * Goal 7. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 110
   * Goal 8. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 111
   * Goal 9. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true
   * Goal 10. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true
   * Goal 11. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true
   * Goal 12. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 13. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 14. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 15. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 16. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 17. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 18. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 19. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 20. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 21. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 22. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 23. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 24. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 25. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 26. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 29. Weak Mutation 292: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 30. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 31. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 32. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 33. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 34. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 35. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 36. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 37. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 38. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 39. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 40. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 41. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 42. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 43. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 44. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 308: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 48. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 49. Weak Mutation 313: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 50. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 51. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 52. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 53. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 54. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 55. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 56. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 57. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 58. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 59. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 60. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 61. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 62. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 63. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 64. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 65. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 66. Weak Mutation 330: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> >
   * Goal 67. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 69. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 70. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 71. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 72. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 73. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 74. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 75. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 76. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 77. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 78. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 79. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 80. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 81. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 82. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 83. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 84. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 85. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 86. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 87. Weak Mutation 355: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> ==
   * Goal 88. Weak Mutation 466: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m1
   * Goal 89. Weak Mutation 467: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m2
   * Goal 90. Weak Mutation 425: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m1
   * Goal 91. Weak Mutation 426: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m2
   * Goal 92. Weak Mutation 427: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row1
   * Goal 93. Weak Mutation 428: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> i
   * Goal 94. Weak Mutation 430: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col2
   * Goal 95. Weak Mutation 433: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of j
   * Goal 96. Weak Mutation 434: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 j
   * Goal 97. Weak Mutation 435: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 j
   * Goal 98. Weak Mutation 436: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row1
   * Goal 99. Weak Mutation 437: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> j
   * Goal 100. Weak Mutation 438: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> sum
   * Goal 101. Weak Mutation 439: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col2
   * Goal 102. Weak Mutation 440: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row2
   * Goal 103. Weak Mutation 441: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col1
   * Goal 104. Weak Mutation 442: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of i
   * Goal 105. Weak Mutation 443: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 i
   * Goal 106. Weak Mutation 444: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 i
   * Goal 107. Weak Mutation 445: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row1
   * Goal 108. Weak Mutation 446: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> i
   * Goal 109. Weak Mutation 448: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col2
   * Goal 110. Weak Mutation 451: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of sum
   * Goal 111. Weak Mutation 452: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 sum
   * Goal 112. Weak Mutation 453: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 sum
   * Goal 113. Weak Mutation 454: MatrixCalc.multiplyMatrices([[III[[III)[[I:116 - ReplaceConstant - 0 -> 1
   * Goal 114. Weak Mutation 455: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 115. Weak Mutation 456: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 116. Weak Mutation 457: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 117. Weak Mutation 458: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 118. Weak Mutation 459: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 119. Weak Mutation 460: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 120. Weak Mutation 461: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 121. Weak Mutation 462: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 122. Weak Mutation 463: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 123. Weak Mutation 464: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 124. Weak Mutation 465: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 125. Weak Mutation 432: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col1
   * Goal 126. Weak Mutation 450: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col1
   * Goal 127. Weak Mutation 431: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row2
   * Goal 128. Weak Mutation 449: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row2
   * Goal 129. Weak Mutation 429: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> sum
   * Goal 130. Weak Mutation 447: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> j
   * Goal 131. [Output]: MatrixCalc.multiplyMatrices([[III[[III)[[I:NonEmptyArray
   * Goal 132. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 133. [METHODNOEX] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 134. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 135. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 136. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 137. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 138. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = (-1587);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = (-1587);
      intArray0[1] = intArray2;
      int[][] intArray3 = new int[7][8];
      intArray3[0] = intArray2;
      intArray3[1] = intArray2;
      intArray3[2] = intArray2;
      intArray3[3] = intArray2;
      intArray3[4] = intArray1;
      int[] intArray4 = new int[5];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray4[3] = 2912;
      intArray4[4] = 1141;
      intArray3[5] = intArray4;
      intArray3[6] = intArray2;
      MatrixCalc.multiplyMatrices(intArray0, 2912, 1141, intArray3, (-1587), 3);
  }

  //Test case number: 4
  /*
   * 127 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 115
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 116
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 107
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 108
   * Goal 6. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 110
   * Goal 7. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 111
   * Goal 8. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true
   * Goal 9. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true
   * Goal 10. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 11. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 12. multiplyMatrices([[III[[III)[[I_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 13. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 14. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 15. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 16. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 17. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 18. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 19. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 20. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 21. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 22. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 23. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 24. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 25. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 28. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 29. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 30. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 31. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 32. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 33. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 34. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 35. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 36. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 37. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 38. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 39. Weak Mutation 292: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 40. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 41. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 42. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 43. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 44. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 46. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 47. Weak Mutation 313: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 48. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 49. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 50. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 51. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 52. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 53. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 54. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 55. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 56. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 57. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 58. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 59. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 60. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 61. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 62. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 63. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 64. Weak Mutation 330: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> >
   * Goal 65. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 66. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 67. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 68. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 69. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 70. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 71. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 72. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 73. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 74. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 75. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 76. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 77. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 78. Weak Mutation 354: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> >
   * Goal 79. Weak Mutation 425: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m1
   * Goal 80. Weak Mutation 426: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m2
   * Goal 81. Weak Mutation 427: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row1
   * Goal 82. Weak Mutation 428: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> i
   * Goal 83. Weak Mutation 430: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col2
   * Goal 84. Weak Mutation 433: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of j
   * Goal 85. Weak Mutation 434: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 j
   * Goal 86. Weak Mutation 435: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 j
   * Goal 87. Weak Mutation 436: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row1
   * Goal 88. Weak Mutation 437: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> j
   * Goal 89. Weak Mutation 438: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> sum
   * Goal 90. Weak Mutation 439: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col2
   * Goal 91. Weak Mutation 440: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row2
   * Goal 92. Weak Mutation 441: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col1
   * Goal 93. Weak Mutation 442: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of i
   * Goal 94. Weak Mutation 443: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 i
   * Goal 95. Weak Mutation 444: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 i
   * Goal 96. Weak Mutation 445: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row1
   * Goal 97. Weak Mutation 446: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> i
   * Goal 98. Weak Mutation 448: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col2
   * Goal 99. Weak Mutation 451: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of sum
   * Goal 100. Weak Mutation 452: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 sum
   * Goal 101. Weak Mutation 453: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 sum
   * Goal 102. Weak Mutation 454: MatrixCalc.multiplyMatrices([[III[[III)[[I:116 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 455: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 104. Weak Mutation 456: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 105. Weak Mutation 457: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 106. Weak Mutation 458: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 107. Weak Mutation 459: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 108. Weak Mutation 460: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 109. Weak Mutation 461: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 110. Weak Mutation 462: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 111. Weak Mutation 463: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 112. Weak Mutation 464: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 113. Weak Mutation 465: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 114. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 115. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 116. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 117. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 118. Weak Mutation 432: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col1
   * Goal 119. Weak Mutation 450: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col1
   * Goal 120. Weak Mutation 431: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row2
   * Goal 121. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 122. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 123. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 124. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 125. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 126. Weak Mutation 429: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> sum
   * Goal 127. Weak Mutation 447: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> j
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[][] intArray0 = new int[7][2];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2429;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2429;
      intArray2[4] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2429;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 0;
      intArray4[1] = 2429;
      intArray4[2] = 2429;
      intArray4[3] = 0;
      intArray4[4] = 0;
      intArray4[5] = 2429;
      intArray4[6] = 0;
      intArray4[7] = 0;
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 0;
      intArray6[3] = 2429;
      intArray6[4] = (-2600);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 0;
      intArray7[1] = 2429;
      intArray7[2] = 2429;
      intArray7[3] = 2429;
      intArray7[4] = 0;
      intArray7[5] = 2429;
      intArray7[6] = (-2600);
      intArray7[7] = 0;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray0, 198, 271, intArray0, 0, 2429);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 5
  /*
   * 166 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 113
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 115
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 116
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 107
   * Goal 6. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 108
   * Goal 7. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 110
   * Goal 8. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 111
   * Goal 9. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true
   * Goal 10. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 11. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 12. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false
   * Goal 13. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 14. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 15. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 16. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 17. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 18. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 19. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 20. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 21. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 22. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 23. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 24. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 25. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 28. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 29. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 30. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 31. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 32. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 33. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 34. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 35. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 36. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 37. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 38. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 39. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 40. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 41. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 42. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 44. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 45. Weak Mutation 313: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 46. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 47. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 48. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 49. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 50. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 51. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 52. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 53. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 54. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 55. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 56. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 57. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 58. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 59. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 60. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 61. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 64. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 65. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 66. Weak Mutation 336: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 67. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 68. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 69. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 70. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 71. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 72. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 73. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 74. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 75. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 76. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 77. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 78. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 79. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 80. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 81. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 82. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 83. Weak Mutation 353: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> -1
   * Goal 84. Weak Mutation 354: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> >
   * Goal 85. Weak Mutation 356: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row1
   * Goal 86. Weak Mutation 358: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> j
   * Goal 87. Weak Mutation 360: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col2
   * Goal 88. Weak Mutation 361: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row2
   * Goal 89. Weak Mutation 363: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of sum
   * Goal 90. Weak Mutation 364: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 sum
   * Goal 91. Weak Mutation 365: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 sum
   * Goal 92. Weak Mutation 367: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m3
   * Goal 93. Weak Mutation 368: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row1
   * Goal 94. Weak Mutation 369: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> i
   * Goal 95. Weak Mutation 425: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m1
   * Goal 96. Weak Mutation 426: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m2
   * Goal 97. Weak Mutation 427: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row1
   * Goal 98. Weak Mutation 430: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col2
   * Goal 99. Weak Mutation 433: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of j
   * Goal 100. Weak Mutation 434: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 j
   * Goal 101. Weak Mutation 435: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 j
   * Goal 102. Weak Mutation 436: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row1
   * Goal 103. Weak Mutation 439: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col2
   * Goal 104. Weak Mutation 440: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row2
   * Goal 105. Weak Mutation 442: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of i
   * Goal 106. Weak Mutation 443: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 i
   * Goal 107. Weak Mutation 444: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 i
   * Goal 108. Weak Mutation 445: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row1
   * Goal 109. Weak Mutation 448: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col2
   * Goal 110. Weak Mutation 451: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of sum
   * Goal 111. Weak Mutation 452: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 sum
   * Goal 112. Weak Mutation 453: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 sum
   * Goal 113. Weak Mutation 454: MatrixCalc.multiplyMatrices([[III[[III)[[I:116 - ReplaceConstant - 0 -> 1
   * Goal 114. Weak Mutation 455: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 115. Weak Mutation 456: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 116. Weak Mutation 457: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 117. Weak Mutation 458: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 118. Weak Mutation 459: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 119. Weak Mutation 460: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 120. Weak Mutation 370: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> sum
   * Goal 121. Weak Mutation 371: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> k
   * Goal 122. Weak Mutation 372: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col2
   * Goal 123. Weak Mutation 373: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row2
   * Goal 124. Weak Mutation 375: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of j
   * Goal 125. Weak Mutation 376: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 j
   * Goal 126. Weak Mutation 377: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 j
   * Goal 127. Weak Mutation 378: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 128. Weak Mutation 380: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 129. Weak Mutation 382: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 130. Weak Mutation 383: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 131. Weak Mutation 385: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 132. Weak Mutation 386: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 133. Weak Mutation 387: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 134. Weak Mutation 389: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m2 -> m3
   * Goal 135. Weak Mutation 390: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 136. Weak Mutation 394: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 137. Weak Mutation 395: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 138. Weak Mutation 397: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 139. Weak Mutation 398: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 140. Weak Mutation 399: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 141. Weak Mutation 400: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row1
   * Goal 142. Weak Mutation 404: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col2
   * Goal 143. Weak Mutation 405: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row2
   * Goal 144. Weak Mutation 407: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of i
   * Goal 145. Weak Mutation 408: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 i
   * Goal 146. Weak Mutation 409: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 i
   * Goal 147. Weak Mutation 411: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> %
   * Goal 148. Weak Mutation 413: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> /
   * Goal 149. Weak Mutation 414: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> %
   * Goal 150. Weak Mutation 417: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> /
   * Goal 151. Weak Mutation 418: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 152. Weak Mutation 419: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 153. Weak Mutation 420: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 154. Weak Mutation 421: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 155. Weak Mutation 422: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 156. Weak Mutation 423: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 157. Weak Mutation 424: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 158. Weak Mutation 374: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col1
   * Goal 159. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 160. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 161. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 162. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 163. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 164. multiplyMatrices([[III[[III)[[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 165. Weak Mutation 431: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row2
   * Goal 166. Weak Mutation 449: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row2
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 831;
      intArray1[2] = 1336;
      intArray1[3] = 1598;
      intArray1[4] = (-916);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1598;
      intArray3[1] = 831;
      intArray3[2] = (-916);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = (-916);
      intArray4[1] = 1336;
      intArray4[2] = 0;
      intArray4[3] = (-916);
      intArray4[4] = 1598;
      intArray4[5] = (-916);
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray0, 1336, 0, intArray0, 1, 897);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 6
  /*
   * 118 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true
   * Goal 6. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 7. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 8. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 9. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 10. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 11. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 12. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 13. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 14. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 15. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 17. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 18. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 19. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 20. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 21. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 22. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 23. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 24. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 25. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 26. Weak Mutation 308: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 466: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m1
   * Goal 28. Weak Mutation 467: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m2
   * Goal 29. Weak Mutation 292: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 30. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 31. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 32. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 33. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 36. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 37. Weak Mutation 313: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 38. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 39. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 40. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 41. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 42. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 43. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 44. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 45. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 46. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 47. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 48. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 49. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 50. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 51. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 52. Weak Mutation 330: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 55. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 56. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 57. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 58. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 59. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 60. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 61. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 62. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 63. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 64. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 65. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 66. Weak Mutation 354: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> >
   * Goal 67. Weak Mutation 425: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m1
   * Goal 68. Weak Mutation 426: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m2
   * Goal 69. Weak Mutation 427: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row1
   * Goal 70. Weak Mutation 428: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> i
   * Goal 71. Weak Mutation 430: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col2
   * Goal 72. Weak Mutation 433: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of j
   * Goal 73. Weak Mutation 434: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 j
   * Goal 74. Weak Mutation 435: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 j
   * Goal 75. Weak Mutation 436: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row1
   * Goal 76. Weak Mutation 437: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> j
   * Goal 77. Weak Mutation 438: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> sum
   * Goal 78. Weak Mutation 439: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col2
   * Goal 79. Weak Mutation 440: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row2
   * Goal 80. Weak Mutation 441: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col1
   * Goal 81. Weak Mutation 442: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of i
   * Goal 82. Weak Mutation 443: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 i
   * Goal 83. Weak Mutation 444: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 i
   * Goal 84. Weak Mutation 445: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row1
   * Goal 85. Weak Mutation 446: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> i
   * Goal 86. Weak Mutation 448: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col2
   * Goal 87. Weak Mutation 451: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of sum
   * Goal 88. Weak Mutation 452: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 sum
   * Goal 89. Weak Mutation 453: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 sum
   * Goal 90. Weak Mutation 454: MatrixCalc.multiplyMatrices([[III[[III)[[I:116 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 455: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 92. Weak Mutation 456: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 93. Weak Mutation 457: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 94. Weak Mutation 458: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 95. Weak Mutation 459: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 96. Weak Mutation 460: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 97. Weak Mutation 461: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 98. Weak Mutation 462: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 99. Weak Mutation 463: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 100. Weak Mutation 464: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 101. Weak Mutation 465: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 102. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 103. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 104. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 105. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 106. Weak Mutation 432: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col1
   * Goal 107. Weak Mutation 450: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col1
   * Goal 108. Weak Mutation 431: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row2
   * Goal 109. Weak Mutation 429: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> sum
   * Goal 110. Weak Mutation 447: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> j
   * Goal 111. [Output]: MatrixCalc.multiplyMatrices([[III[[III)[[I:NonEmptyArray
   * Goal 112. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 113. [METHODNOEX] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 114. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 115. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 116. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 117. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 118. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 3;
      intArray1[1] = 3;
      intArray1[2] = 1012;
      intArray0[0] = intArray1;
      int[][] intArray2 = MatrixCalc.multiplyMatrices(intArray0, 3, 3, intArray0, 0, 3);
      assertNotSame(intArray2, intArray0);
  }

  //Test case number: 7
  /*
   * 142 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 113
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 5. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 6. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 7. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 8. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 9. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 10. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 11. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 12. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 13. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 14. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 15. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 16. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 17. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 20. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 21. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 22. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 23. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 24. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 25. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 26. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 27. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 28. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 29. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 30. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 31. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 32. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 33. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 36. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 37. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 38. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 39. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 40. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 41. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 42. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 43. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 44. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 45. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 46. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 47. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 48. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 49. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 50. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 53. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 54. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 55. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 56. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 57. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 58. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 59. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 60. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 61. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 62. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 63. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 64. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 65. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 66. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 67. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false
   * Goal 68. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 69. Weak Mutation 336: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 70. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 71. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 72. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 73. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 74. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 75. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 76. Weak Mutation 353: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> -1
   * Goal 77. Weak Mutation 356: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row1
   * Goal 78. Weak Mutation 357: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> i
   * Goal 79. Weak Mutation 358: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> j
   * Goal 80. Weak Mutation 359: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> k
   * Goal 81. Weak Mutation 360: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col2
   * Goal 82. Weak Mutation 361: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row2
   * Goal 83. Weak Mutation 362: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col1
   * Goal 84. Weak Mutation 363: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of sum
   * Goal 85. Weak Mutation 364: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 sum
   * Goal 86. Weak Mutation 365: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 sum
   * Goal 87. Weak Mutation 366: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m2
   * Goal 88. Weak Mutation 367: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m3
   * Goal 89. Weak Mutation 368: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row1
   * Goal 90. Weak Mutation 370: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> sum
   * Goal 91. Weak Mutation 371: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> k
   * Goal 92. Weak Mutation 372: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col2
   * Goal 93. Weak Mutation 373: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row2
   * Goal 94. Weak Mutation 375: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of j
   * Goal 95. Weak Mutation 376: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 j
   * Goal 96. Weak Mutation 377: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 j
   * Goal 97. Weak Mutation 378: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 98. Weak Mutation 379: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 99. Weak Mutation 380: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 100. Weak Mutation 381: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 101. Weak Mutation 382: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 102. Weak Mutation 383: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 103. Weak Mutation 384: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 104. Weak Mutation 385: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 105. Weak Mutation 386: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 106. Weak Mutation 387: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 107. Weak Mutation 388: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m2 -> m1
   * Goal 108. Weak Mutation 389: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m2 -> m3
   * Goal 109. Weak Mutation 390: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 110. Weak Mutation 391: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 111. Weak Mutation 392: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 112. Weak Mutation 393: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 113. Weak Mutation 394: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 114. Weak Mutation 395: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 115. Weak Mutation 396: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 116. Weak Mutation 397: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 117. Weak Mutation 398: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 118. Weak Mutation 399: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 119. Weak Mutation 400: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row1
   * Goal 120. Weak Mutation 402: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> sum
   * Goal 121. Weak Mutation 403: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> k
   * Goal 122. Weak Mutation 404: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col2
   * Goal 123. Weak Mutation 405: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row2
   * Goal 124. Weak Mutation 407: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of i
   * Goal 125. Weak Mutation 408: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 i
   * Goal 126. Weak Mutation 409: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 i
   * Goal 127. Weak Mutation 410: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> +
   * Goal 128. Weak Mutation 411: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> %
   * Goal 129. Weak Mutation 412: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> -
   * Goal 130. Weak Mutation 413: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> /
   * Goal 131. Weak Mutation 414: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> %
   * Goal 132. Weak Mutation 415: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> -
   * Goal 133. Weak Mutation 416: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> *
   * Goal 134. Weak Mutation 417: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> /
   * Goal 135. Weak Mutation 418: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 136. Weak Mutation 419: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 137. Weak Mutation 420: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 138. Weak Mutation 421: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 139. Weak Mutation 422: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 140. Weak Mutation 423: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 141. Weak Mutation 424: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 142. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[][] intArray0 = new int[9][0];
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 496;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 2023;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 2023;
      intArray3[2] = 2;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray3[6] = 496;
      intArray3[7] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 1;
      intArray4[1] = 2023;
      intArray4[2] = 2023;
      intArray4[3] = 2023;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 496;
      intArray5[1] = 2023;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 1;
      intArray6[1] = 2;
      intArray6[2] = 496;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 496;
      intArray7[1] = 2023;
      intArray7[2] = 0;
      intArray7[3] = 1;
      intArray7[4] = 2023;
      intArray7[5] = 2;
      intArray7[6] = 0;
      intArray7[7] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 2;
      intArray8[1] = 496;
      intArray8[2] = 2;
      intArray8[3] = 0;
      intArray8[4] = 0;
      intArray8[5] = 1;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[1];
      intArray9[0] = 2023;
      intArray0[8] = intArray9;
      int[][] intArray10 = new int[5][8];
      intArray10[0] = intArray5;
      intArray10[1] = intArray9;
      intArray10[2] = intArray5;
      intArray10[3] = intArray7;
      intArray10[4] = intArray6;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray0, 1, 0, intArray10, 496, 2888);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 8
  /*
   * 97 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 113
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 107
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 108
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 110
   * Goal 6. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 111
   * Goal 7. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 8. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 9. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false
   * Goal 10. multiplyMatrices([[III[[III)[[I_java.lang.NullPointerException_IMPLICIT
   * Goal 11. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 12. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 13. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 14. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 15. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 16. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 17. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 18. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 19. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 20. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 21. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 22. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 23. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 26. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 27. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 28. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 29. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 30. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 31. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 32. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 33. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 34. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 35. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 36. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 37. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 38. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 39. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 40. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 43. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 44. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 45. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 46. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 47. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 48. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 49. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 50. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 51. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 52. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 53. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 54. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 55. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 56. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 57. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 58. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 61. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 62. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 63. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 64. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 65. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 66. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 67. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 68. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 69. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 70. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 71. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 72. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 73. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 74. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 75. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 76. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 77. Weak Mutation 353: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> -1
   * Goal 78. Weak Mutation 356: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row1
   * Goal 79. Weak Mutation 360: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col2
   * Goal 80. Weak Mutation 361: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row2
   * Goal 81. Weak Mutation 362: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col1
   * Goal 82. Weak Mutation 363: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of sum
   * Goal 83. Weak Mutation 364: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 sum
   * Goal 84. Weak Mutation 365: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 sum
   * Goal 85. Weak Mutation 366: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m2
   * Goal 86. Weak Mutation 367: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m3
   * Goal 87. Weak Mutation 368: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row1
   * Goal 88. Weak Mutation 372: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col2
   * Goal 89. Weak Mutation 373: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row2
   * Goal 90. Weak Mutation 375: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of j
   * Goal 91. Weak Mutation 376: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 j
   * Goal 92. Weak Mutation 377: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 j
   * Goal 93. Weak Mutation 374: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col1
   * Goal 94. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 95. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 96. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 97. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[3][8];
      int[] intArray1 = new int[3];
      intArray1[0] = 1251;
      intArray1[1] = 118;
      intArray1[2] = 1251;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1293;
      intArray2[1] = 118;
      intArray2[2] = 118;
      intArray2[3] = 118;
      intArray2[4] = 1251;
      intArray2[5] = 118;
      intArray2[6] = 118;
      intArray2[7] = (-190);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices((int[][]) null, 1251, 118, intArray0, 1293, 2876);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 9
  /*
   * 139 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 113
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false
   * Goal 6. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 7. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 8. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 9. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 10. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 11. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 12. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 13. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 14. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 15. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 16. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 19. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 20. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 21. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 22. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 23. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 24. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 25. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 26. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 27. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 28. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 29. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 30. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 31. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 32. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 35. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 36. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 37. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 38. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 39. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 40. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 41. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 42. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 43. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 44. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 45. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 46. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 47. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 48. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 49. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 52. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 53. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 54. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 55. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 56. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 57. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 58. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 59. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 60. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 61. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 62. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 63. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 64. Weak Mutation 336: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 65. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 66. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 67. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 68. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 69. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 70. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 71. Weak Mutation 353: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 356: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row1
   * Goal 73. Weak Mutation 357: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> i
   * Goal 74. Weak Mutation 358: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> j
   * Goal 75. Weak Mutation 359: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> k
   * Goal 76. Weak Mutation 360: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col2
   * Goal 77. Weak Mutation 361: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row2
   * Goal 78. Weak Mutation 362: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col1
   * Goal 79. Weak Mutation 363: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of sum
   * Goal 80. Weak Mutation 364: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 sum
   * Goal 81. Weak Mutation 365: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 sum
   * Goal 82. Weak Mutation 367: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m3
   * Goal 83. Weak Mutation 368: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row1
   * Goal 84. Weak Mutation 370: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> sum
   * Goal 85. Weak Mutation 371: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> k
   * Goal 86. Weak Mutation 372: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col2
   * Goal 87. Weak Mutation 373: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row2
   * Goal 88. Weak Mutation 375: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of j
   * Goal 89. Weak Mutation 376: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 j
   * Goal 90. Weak Mutation 377: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 j
   * Goal 91. Weak Mutation 378: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 92. Weak Mutation 379: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 93. Weak Mutation 380: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 94. Weak Mutation 381: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 95. Weak Mutation 382: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 96. Weak Mutation 383: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 97. Weak Mutation 384: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 98. Weak Mutation 385: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 99. Weak Mutation 386: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 100. Weak Mutation 387: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 101. Weak Mutation 389: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m2 -> m3
   * Goal 102. Weak Mutation 390: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 103. Weak Mutation 391: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 104. Weak Mutation 392: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 105. Weak Mutation 393: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 106. Weak Mutation 394: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 107. Weak Mutation 395: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 108. Weak Mutation 396: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 109. Weak Mutation 397: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 110. Weak Mutation 398: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 111. Weak Mutation 399: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 112. Weak Mutation 400: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row1
   * Goal 113. Weak Mutation 404: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col2
   * Goal 114. Weak Mutation 405: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row2
   * Goal 115. Weak Mutation 407: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of i
   * Goal 116. Weak Mutation 408: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 i
   * Goal 117. Weak Mutation 409: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 i
   * Goal 118. Weak Mutation 410: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> +
   * Goal 119. Weak Mutation 411: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> %
   * Goal 120. Weak Mutation 412: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> -
   * Goal 121. Weak Mutation 413: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> /
   * Goal 122. Weak Mutation 414: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> %
   * Goal 123. Weak Mutation 415: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> -
   * Goal 124. Weak Mutation 416: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> *
   * Goal 125. Weak Mutation 417: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> /
   * Goal 126. Weak Mutation 418: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 127. Weak Mutation 419: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 128. Weak Mutation 420: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 129. Weak Mutation 421: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 130. Weak Mutation 422: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 131. Weak Mutation 423: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 132. Weak Mutation 424: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 133. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 134. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 135. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 136. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 137. multiplyMatrices([[III[[III)[[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 138. Weak Mutation 374: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col1
   * Goal 139. Weak Mutation 406: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col1
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[5];
      intArray1[0] = (-960);
      intArray1[1] = 1;
      intArray1[2] = (-1);
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray0, 1, 337, intArray0, 1332, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 10
  /*
   * 57 covered goals:
   * Goal 1. MatrixCalc.printMatrix([[III)V: Line 96
   * Goal 2. MatrixCalc.printMatrix([[III)V: Line 98
   * Goal 3. MatrixCalc.printMatrix([[III)V: Line 94
   * Goal 4. MatrixCalc.printMatrix([[III)V: Line 95
   * Goal 5. MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - true
   * Goal 6. MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false
   * Goal 7. MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - false
   * Goal 8. Weak Mutation 256: MatrixCalc.printMatrix([[III)V:95 - ReplaceComparisonOperator >= -> -1
   * Goal 9. Weak Mutation 257: MatrixCalc.printMatrix([[III)V:95 - ReplaceComparisonOperator >= -> >
   * Goal 10. Weak Mutation 229: MatrixCalc.printMatrix([[III)V:94 - ReplaceConstant - 0 -> 1
   * Goal 11. Weak Mutation 230: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> col
   * Goal 12. Weak Mutation 231: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> row
   * Goal 13. Weak Mutation 232: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp Negation of i
   * Goal 14. Weak Mutation 233: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC 1 i
   * Goal 15. Weak Mutation 234: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC -1 i
   * Goal 16. Weak Mutation 235: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable row -> col
   * Goal 17. Weak Mutation 236: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable row -> i
   * Goal 18. Weak Mutation 237: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp Negation of row
   * Goal 19. Weak Mutation 238: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC 1 row
   * Goal 20. Weak Mutation 239: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC -1 row
   * Goal 21. Weak Mutation 240: MatrixCalc.printMatrix([[III)V:94 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 243: MatrixCalc.printMatrix([[III)V:95 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 244: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> col
   * Goal 24. Weak Mutation 246: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> row
   * Goal 25. Weak Mutation 247: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp Negation of j
   * Goal 26. Weak Mutation 248: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC 1 j
   * Goal 27. Weak Mutation 249: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC -1 j
   * Goal 28. Weak Mutation 250: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> i
   * Goal 29. Weak Mutation 251: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> j
   * Goal 30. Weak Mutation 253: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp Negation of col
   * Goal 31. Weak Mutation 254: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC 1 col
   * Goal 32. Weak Mutation 255: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC -1 col
   * Goal 33. Weak Mutation 259: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> col
   * Goal 34. Weak Mutation 261: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> row
   * Goal 35. Weak Mutation 262: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp Negation of i
   * Goal 36. Weak Mutation 263: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC 1 i
   * Goal 37. Weak Mutation 264: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC -1 i
   * Goal 38. Weak Mutation 245: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> i
   * Goal 39. Weak Mutation 252: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> row
   * Goal 40. Weak Mutation 275: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> col
   * Goal 41. Weak Mutation 276: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> row
   * Goal 42. Weak Mutation 260: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> j
   * Goal 43. Weak Mutation 265: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable j -> col
   * Goal 44. Weak Mutation 266: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable j -> i
   * Goal 45. Weak Mutation 267: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable j -> row
   * Goal 46. Weak Mutation 268: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp Negation of j
   * Goal 47. Weak Mutation 269: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC 1 j
   * Goal 48. Weak Mutation 270: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC -1 j
   * Goal 49. Weak Mutation 271: MatrixCalc.printMatrix([[III)V:96 - ReplaceConstant - 	 -> 
   * Goal 50. Weak Mutation 272: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> col
   * Goal 51. Weak Mutation 273: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> i
   * Goal 52. Weak Mutation 274: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> row
   * Goal 53. [METHOD] MatrixCalc.printMatrix([[III)V
   * Goal 54. Branch MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false in context: MatrixCalc:printMatrix([[III)V
   * Goal 55. Branch MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - false in context: MatrixCalc:printMatrix([[III)V
   * Goal 56. Branch MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - true in context: MatrixCalc:printMatrix([[III)V
   * Goal 57. printMatrix([[III)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[8];
      intArray1[0] = 3703;
      intArray1[1] = (-930);
      intArray1[2] = 0;
      intArray1[3] = 3;
      intArray1[4] = 2858;
      intArray1[5] = 0;
      intArray1[6] = 691;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        MatrixCalc.printMatrix(intArray0, 515, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 11
  /*
   * 31 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true
   * Goal 2. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 3. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 4. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 5. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 6. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 7. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 8. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 9. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 10. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 11. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 12. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 13. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 14. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 15. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 17. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 18. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 19. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 20. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 21. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 22. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 23. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 24. Weak Mutation 308: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 466: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m1
   * Goal 26. Weak Mutation 467: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m2
   * Goal 27. [Output]: MatrixCalc.multiplyMatrices([[III[[III)[[I:EmptyArray
   * Goal 28. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 29. [METHODNOEX] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 30. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 31. multiplyMatrices([[III[[III)[[I_java.lang.NegativeArraySizeException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[][] intArray0 = new int[9][8];
      int[][] intArray1 = MatrixCalc.multiplyMatrices((int[][]) null, 0, 355, (int[][]) null, 0, 0);
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray1, 754, 355, (int[][]) null, (-1766), (-933));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 12
  /*
   * 40 covered goals:
   * Goal 1. MatrixCalc.matrixInput([[III)[[I: Line 80
   * Goal 2. MatrixCalc.matrixInput([[III)[[I: Line 81
   * Goal 3. MatrixCalc.matrixInput([[III)[[I: Line 87
   * Goal 4. MatrixCalc.matrixInput([[III)[[I: Line 76
   * Goal 5. MatrixCalc.matrixInput([[III)[[I: Line 77
   * Goal 6. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true
   * Goal 7. MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - true
   * Goal 8. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false
   * Goal 9. Weak Mutation 146: MatrixCalc.matrixInput([[III)[[I:76 - ReplaceConstant - Enter whole numbers for the matrix -> 
   * Goal 10. Weak Mutation 147: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceConstant - 0 -> 1
   * Goal 11. Weak Mutation 148: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 12. Weak Mutation 149: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 13. Weak Mutation 150: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of i
   * Goal 14. Weak Mutation 151: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 i
   * Goal 15. Weak Mutation 152: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 i
   * Goal 16. Weak Mutation 153: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> col
   * Goal 17. Weak Mutation 154: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> i
   * Goal 18. Weak Mutation 155: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of row
   * Goal 19. Weak Mutation 156: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 row
   * Goal 20. Weak Mutation 157: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 row
   * Goal 21. Weak Mutation 158: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 159: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 161: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 164: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> row
   * Goal 25. Weak Mutation 165: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of j
   * Goal 26. Weak Mutation 166: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 j
   * Goal 27. Weak Mutation 167: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 j
   * Goal 28. Weak Mutation 170: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> row
   * Goal 29. Weak Mutation 171: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of col
   * Goal 30. Weak Mutation 172: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 col
   * Goal 31. Weak Mutation 173: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 col
   * Goal 32. Weak Mutation 175: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 227: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 34. Weak Mutation 228: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 35. [Output]: MatrixCalc.matrixInput([[III)[[I:EmptyArray
   * Goal 36. [METHOD] MatrixCalc.matrixInput([[III)[[I
   * Goal 37. [METHODNOEX] MatrixCalc.matrixInput([[III)[[I
   * Goal 38. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 39. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 40. Branch MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - true in context: MatrixCalc:matrixInput([[III)[[I
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[][] intArray0 = new int[0][6];
      int[][] intArray1 = MatrixCalc.matrixInput(intArray0, 1, 0);
      assertSame(intArray0, intArray1);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * Goal 1. MatrixCalc.printArr([I)V: Line 66
   * Goal 2. Weak Mutation 135: MatrixCalc.printArr([I)V:66 - ReplaceConstant - 0 -> 1
   * Goal 3. Weak Mutation 136: MatrixCalc.printArr([I)V:66 - InsertUnaryOp Negation of i
   * Goal 4. Weak Mutation 137: MatrixCalc.printArr([I)V:66 - InsertUnaryOp IINC 1 i
   * Goal 5. Weak Mutation 138: MatrixCalc.printArr([I)V:66 - InsertUnaryOp IINC -1 i
   * Goal 6. [METHOD] MatrixCalc.printArr([I)V
   * Goal 7. printArr([I)V_java.lang.NullPointerException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        MatrixCalc.printArr((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 14
  /*
   * 37 covered goals:
   * Goal 1. MatrixCalc.printMatrix([[III)V: Line 96
   * Goal 2. MatrixCalc.printMatrix([[III)V: Line 94
   * Goal 3. MatrixCalc.printMatrix([[III)V: Line 95
   * Goal 4. MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false
   * Goal 5. MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - false
   * Goal 6. printMatrix([[III)V_java.lang.NullPointerException_IMPLICIT
   * Goal 7. Weak Mutation 229: MatrixCalc.printMatrix([[III)V:94 - ReplaceConstant - 0 -> 1
   * Goal 8. Weak Mutation 230: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> col
   * Goal 9. Weak Mutation 231: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> row
   * Goal 10. Weak Mutation 232: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp Negation of i
   * Goal 11. Weak Mutation 233: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC 1 i
   * Goal 12. Weak Mutation 234: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC -1 i
   * Goal 13. Weak Mutation 236: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable row -> i
   * Goal 14. Weak Mutation 237: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp Negation of row
   * Goal 15. Weak Mutation 238: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC 1 row
   * Goal 16. Weak Mutation 239: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC -1 row
   * Goal 17. Weak Mutation 240: MatrixCalc.printMatrix([[III)V:94 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 243: MatrixCalc.printMatrix([[III)V:95 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 244: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> col
   * Goal 20. Weak Mutation 246: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> row
   * Goal 21. Weak Mutation 247: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp Negation of j
   * Goal 22. Weak Mutation 248: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC 1 j
   * Goal 23. Weak Mutation 249: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC -1 j
   * Goal 24. Weak Mutation 250: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> i
   * Goal 25. Weak Mutation 251: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> j
   * Goal 26. Weak Mutation 253: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp Negation of col
   * Goal 27. Weak Mutation 254: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC 1 col
   * Goal 28. Weak Mutation 255: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC -1 col
   * Goal 29. Weak Mutation 256: MatrixCalc.printMatrix([[III)V:95 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 259: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> col
   * Goal 31. Weak Mutation 261: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> row
   * Goal 32. Weak Mutation 262: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp Negation of i
   * Goal 33. Weak Mutation 263: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC 1 i
   * Goal 34. Weak Mutation 264: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC -1 i
   * Goal 35. [METHOD] MatrixCalc.printMatrix([[III)V
   * Goal 36. Branch MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false in context: MatrixCalc:printMatrix([[III)V
   * Goal 37. Branch MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - false in context: MatrixCalc:printMatrix([[III)V
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        MatrixCalc.printMatrix((int[][]) null, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 15
  /*
   * 48 covered goals:
   * Goal 1. MatrixCalc.matrixInput([[III)[[I: Line 80
   * Goal 2. MatrixCalc.matrixInput([[III)[[I: Line 81
   * Goal 3. MatrixCalc.matrixInput([[III)[[I: Line 87
   * Goal 4. MatrixCalc.matrixInput([[III)[[I: Line 76
   * Goal 5. MatrixCalc.matrixInput([[III)[[I: Line 77
   * Goal 6. MatrixCalc.<init>()V: root-Branch
   * Goal 7. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true
   * Goal 8. MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - true
   * Goal 9. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false
   * Goal 10. Weak Mutation 146: MatrixCalc.matrixInput([[III)[[I:76 - ReplaceConstant - Enter whole numbers for the matrix -> 
   * Goal 11. Weak Mutation 147: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 148: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 13. Weak Mutation 149: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 14. Weak Mutation 150: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of i
   * Goal 15. Weak Mutation 151: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 i
   * Goal 16. Weak Mutation 152: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 i
   * Goal 17. Weak Mutation 153: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> col
   * Goal 18. Weak Mutation 154: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> i
   * Goal 19. Weak Mutation 155: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of row
   * Goal 20. Weak Mutation 156: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 row
   * Goal 21. Weak Mutation 157: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 row
   * Goal 22. Weak Mutation 158: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 159: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> >
   * Goal 24. Weak Mutation 161: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 162: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> col
   * Goal 26. Weak Mutation 163: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> i
   * Goal 27. Weak Mutation 227: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 28. Weak Mutation 164: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> row
   * Goal 29. Weak Mutation 228: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 30. Weak Mutation 165: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of j
   * Goal 31. Weak Mutation 166: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 j
   * Goal 32. Weak Mutation 167: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 j
   * Goal 33. Weak Mutation 168: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> i
   * Goal 34. Weak Mutation 169: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> j
   * Goal 35. Weak Mutation 170: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> row
   * Goal 36. Weak Mutation 171: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of col
   * Goal 37. Weak Mutation 172: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 col
   * Goal 38. Weak Mutation 173: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 col
   * Goal 39. Weak Mutation 176: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceComparisonOperator >= -> ==
   * Goal 40. [Output]: MatrixCalc.matrixInput([[III)[[I:NonEmptyArray
   * Goal 41. [METHOD] MatrixCalc.matrixInput([[III)[[I
   * Goal 42. [METHOD] MatrixCalc.<init>()V
   * Goal 43. [METHODNOEX] MatrixCalc.matrixInput([[III)[[I
   * Goal 44. [METHODNOEX] MatrixCalc.<init>()V
   * Goal 45. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 46. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 47. Branch MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - true in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 48. Branch MatrixCalc.<init>()V: root-Branch in context: MatrixCalc:<init>()V
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MatrixCalc matrixCalc0 = new MatrixCalc();
      int[][] intArray0 = new int[9][7];
      int[] intArray1 = new int[9];
      intArray1[0] = (-3035);
      intArray1[1] = (-1896);
      intArray1[2] = (-1159);
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 2494;
      intArray1[7] = (-241);
      intArray1[8] = 1645;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = (-1159);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 2494;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 1;
      intArray5[1] = (-241);
      intArray5[2] = 0;
      intArray5[3] = (-1159);
      intArray5[4] = (-3035);
      intArray5[5] = (-1896);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = (-1896);
      intArray6[1] = 1;
      intArray6[2] = 0;
      intArray6[3] = (-3035);
      intArray6[4] = (-241);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[1];
      intArray7[0] = (-3035);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 2494;
      intArray8[1] = 2494;
      intArray8[2] = (-241);
      intArray8[3] = (-1896);
      intArray8[4] = (-241);
      intArray8[5] = 1;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[4];
      intArray9[0] = (-3035);
      intArray9[1] = (-1159);
      intArray9[2] = (-241);
      intArray9[3] = 2472;
      intArray0[8] = intArray9;
      int[][] intArray10 = MatrixCalc.matrixInput(intArray0, 2494, (-3794));
      assertSame(intArray10, intArray0);
  }

  //Test case number: 16
  /*
   * 14 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 107
   * Goal 2. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 3. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 4. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 5. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 6. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 7. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 8. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 9. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 10. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 11. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 12. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 13. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 14. multiplyMatrices([[III[[III)[[I_java.lang.NegativeArraySizeException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices((int[][]) null, (-310), (-1248), (int[][]) null, (-310), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 17
  /*
   * 16 covered goals:
   * Goal 1. MatrixCalc.matrixInput([[III)[[I: Line 80
   * Goal 2. MatrixCalc.matrixInput([[III)[[I: Line 87
   * Goal 3. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true
   * Goal 4. Weak Mutation 146: MatrixCalc.matrixInput([[III)[[I:76 - ReplaceConstant - Enter whole numbers for the matrix -> 
   * Goal 5. Weak Mutation 147: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceConstant - 0 -> 1
   * Goal 6. Weak Mutation 150: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of i
   * Goal 7. Weak Mutation 151: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 i
   * Goal 8. Weak Mutation 152: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 i
   * Goal 9. Weak Mutation 155: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of row
   * Goal 10. Weak Mutation 156: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 row
   * Goal 11. Weak Mutation 157: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 row
   * Goal 12. Weak Mutation 159: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> >
   * Goal 13. [Output]: MatrixCalc.matrixInput([[III)[[I:Null
   * Goal 14. [METHOD] MatrixCalc.matrixInput([[III)[[I
   * Goal 15. [METHODNOEX] MatrixCalc.matrixInput([[III)[[I
   * Goal 16. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true in context: MatrixCalc:matrixInput([[III)[[I
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[][] intArray0 = MatrixCalc.matrixInput((int[][]) null, 0, 0);
      assertNull(intArray0);
  }

  //Test case number: 18
  /*
   * 42 covered goals:
   * Goal 1. MatrixCalc.matrixInput([[III)[[I: Line 80
   * Goal 2. MatrixCalc.printArr([I)V: Line 66
   * Goal 3. MatrixCalc.printArr([I)V: Line 67
   * Goal 4. MatrixCalc.printArr([I)V: Line 69
   * Goal 5. MatrixCalc.printArr([I)V: Line 70
   * Goal 6. MatrixCalc.matrixInput([[III)[[I: Line 87
   * Goal 7. MatrixCalc.matrixInput([[III)[[I: Line 76
   * Goal 8. MatrixCalc.matrixInput([[III)[[I: Line 77
   * Goal 9. MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - true
   * Goal 10. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true
   * Goal 11. MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - false
   * Goal 12. Weak Mutation 135: MatrixCalc.printArr([I)V:66 - ReplaceConstant - 0 -> 1
   * Goal 13. Weak Mutation 136: MatrixCalc.printArr([I)V:66 - InsertUnaryOp Negation of i
   * Goal 14. Weak Mutation 137: MatrixCalc.printArr([I)V:66 - InsertUnaryOp IINC 1 i
   * Goal 15. Weak Mutation 138: MatrixCalc.printArr([I)V:66 - InsertUnaryOp IINC -1 i
   * Goal 16. Weak Mutation 139: MatrixCalc.printArr([I)V:66 - ReplaceComparisonOperator >= -> -1
   * Goal 17. Weak Mutation 140: MatrixCalc.printArr([I)V:66 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 142: MatrixCalc.printArr([I)V:67 - InsertUnaryOp Negation of i
   * Goal 19. Weak Mutation 143: MatrixCalc.printArr([I)V:67 - InsertUnaryOp IINC 1 i
   * Goal 20. Weak Mutation 144: MatrixCalc.printArr([I)V:67 - InsertUnaryOp IINC -1 i
   * Goal 21. Weak Mutation 145: MatrixCalc.printArr([I)V:67 - ReplaceConstant -   -> 
   * Goal 22. Weak Mutation 146: MatrixCalc.matrixInput([[III)[[I:76 - ReplaceConstant - Enter whole numbers for the matrix -> 
   * Goal 23. Weak Mutation 147: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 148: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 25. Weak Mutation 149: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 26. Weak Mutation 150: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 151: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 i
   * Goal 28. Weak Mutation 152: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 i
   * Goal 29. Weak Mutation 153: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> col
   * Goal 30. Weak Mutation 154: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> i
   * Goal 31. Weak Mutation 155: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of row
   * Goal 32. Weak Mutation 156: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 row
   * Goal 33. Weak Mutation 157: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 row
   * Goal 34. Weak Mutation 160: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> ==
   * Goal 35. [Output]: MatrixCalc.matrixInput([[III)[[I:NonEmptyArray
   * Goal 36. [METHOD] MatrixCalc.matrixInput([[III)[[I
   * Goal 37. [METHOD] MatrixCalc.printArr([I)V
   * Goal 38. [METHODNOEX] MatrixCalc.matrixInput([[III)[[I
   * Goal 39. [METHODNOEX] MatrixCalc.printArr([I)V
   * Goal 40. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 41. Branch MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - false in context: MatrixCalc:printArr([I)V
   * Goal 42. Branch MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - true in context: MatrixCalc:printArr([I)V
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1367);
      MatrixCalc.printArr(intArray0);
      int[][] intArray1 = new int[1][3];
      intArray1[0] = intArray0;
      int[][] intArray2 = MatrixCalc.matrixInput(intArray1, (-1367), (-958));
      assertSame(intArray2, intArray1);
  }

  //Test case number: 19
  /*
   * 72 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 113
   * Goal 5. Weak Mutation 335: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 6. Weak Mutation 336: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 7. Weak Mutation 338: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 8. Weak Mutation 339: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 9. Weak Mutation 345: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> j
   * Goal 10. Weak Mutation 346: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> sum
   * Goal 11. Weak Mutation 347: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> k
   * Goal 12. Weak Mutation 349: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col1
   * Goal 13. Weak Mutation 353: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 356: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row1
   * Goal 15. Weak Mutation 359: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> k
   * Goal 16. Weak Mutation 360: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col2
   * Goal 17. Weak Mutation 361: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> row2
   * Goal 18. Weak Mutation 362: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable sum -> col1
   * Goal 19. Weak Mutation 363: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of sum
   * Goal 20. Weak Mutation 364: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 sum
   * Goal 21. Weak Mutation 365: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 sum
   * Goal 22. Weak Mutation 367: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m1 -> m3
   * Goal 23. Weak Mutation 368: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row1
   * Goal 24. Weak Mutation 371: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> k
   * Goal 25. Weak Mutation 372: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col2
   * Goal 26. Weak Mutation 373: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> row2
   * Goal 27. Weak Mutation 375: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of j
   * Goal 28. Weak Mutation 376: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 j
   * Goal 29. Weak Mutation 377: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 j
   * Goal 30. Weak Mutation 378: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 31. Weak Mutation 379: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 32. Weak Mutation 380: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 33. Weak Mutation 381: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 34. Weak Mutation 382: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 35. Weak Mutation 383: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 36. Weak Mutation 384: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 37. Weak Mutation 385: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 38. Weak Mutation 386: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 39. Weak Mutation 387: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 40. Weak Mutation 389: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable m2 -> m3
   * Goal 41. Weak Mutation 390: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row1
   * Goal 42. Weak Mutation 391: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> i
   * Goal 43. Weak Mutation 392: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> j
   * Goal 44. Weak Mutation 393: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> sum
   * Goal 45. Weak Mutation 394: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col2
   * Goal 46. Weak Mutation 395: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> row2
   * Goal 47. Weak Mutation 396: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable k -> col1
   * Goal 48. Weak Mutation 397: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of k
   * Goal 49. Weak Mutation 398: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 k
   * Goal 50. Weak Mutation 399: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 k
   * Goal 51. Weak Mutation 400: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row1
   * Goal 52. Weak Mutation 403: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> k
   * Goal 53. Weak Mutation 404: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col2
   * Goal 54. Weak Mutation 405: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> row2
   * Goal 55. Weak Mutation 407: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp Negation of i
   * Goal 56. Weak Mutation 408: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC 1 i
   * Goal 57. Weak Mutation 409: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - InsertUnaryOp IINC -1 i
   * Goal 58. Weak Mutation 411: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> %
   * Goal 59. Weak Mutation 413: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator * -> /
   * Goal 60. Weak Mutation 414: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 417: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 418: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 63. Weak Mutation 419: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 64. Weak Mutation 420: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> j
   * Goal 65. Weak Mutation 421: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> sum
   * Goal 66. Weak Mutation 422: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 67. Weak Mutation 423: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row2
   * Goal 68. Weak Mutation 424: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col1
   * Goal 69. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 70. multiplyMatrices([[III[[III)[[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 71. Weak Mutation 374: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable j -> col1
   * Goal 72. Weak Mutation 406: MatrixCalc.multiplyMatrices([[III[[III)[[I:113 - ReplaceVariable i -> col1
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[][] intArray0 = new int[3][5];
      int[] intArray1 = new int[16];
      intArray1[2] = 200;
      intArray1[5] = 232;
      intArray0[1] = intArray1;
      int[] intArray2 = new int[18];
      intArray2[3] = 236;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        MatrixCalc.multiplyMatrices(intArray0, 232, (-938), intArray0, 236, 4134);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         assertThrownBy("MatrixCalc", e);
      }
  }

  //Test case number: 20
  /*
   * 125 covered goals:
   * Goal 1. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true
   * Goal 2. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true
   * Goal 3. MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true
   * Goal 4. MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false
   * Goal 5. MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false
   * Goal 6. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 107
   * Goal 7. Weak Mutation 278: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> row2
   * Goal 8. Weak Mutation 279: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col1
   * Goal 9. Weak Mutation 280: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of row1
   * Goal 10. Weak Mutation 281: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 row1
   * Goal 11. Weak Mutation 282: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 row1
   * Goal 12. Weak Mutation 284: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row2
   * Goal 13. Weak Mutation 285: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> col1
   * Goal 14. Weak Mutation 286: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp Negation of col2
   * Goal 15. Weak Mutation 287: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC 1 col2
   * Goal 16. Weak Mutation 288: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - InsertUnaryOp IINC -1 col2
   * Goal 17. [METHOD] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 18. Weak Mutation 277: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable row1 -> col2
   * Goal 19. Weak Mutation 283: MatrixCalc.multiplyMatrices([[III[[III)[[I:107 - ReplaceVariable col2 -> row1
   * Goal 20. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 108
   * Goal 21. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 110
   * Goal 22. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 119
   * Goal 23. Weak Mutation 289: MatrixCalc.multiplyMatrices([[III[[III)[[I:108 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 290: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 291: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 26. Weak Mutation 294: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 27. Weak Mutation 295: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 28. Weak Mutation 296: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of i
   * Goal 29. Weak Mutation 297: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 i
   * Goal 30. Weak Mutation 298: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 i
   * Goal 31. Weak Mutation 300: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row1
   * Goal 32. Weak Mutation 302: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> row2
   * Goal 33. Weak Mutation 303: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> col1
   * Goal 34. Weak Mutation 304: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp Negation of col2
   * Goal 35. Weak Mutation 305: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC 1 col2
   * Goal 36. Weak Mutation 306: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - InsertUnaryOp IINC -1 col2
   * Goal 37. Weak Mutation 308: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 466: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m1
   * Goal 39. Weak Mutation 467: MatrixCalc.multiplyMatrices([[III[[III)[[I:119 - ReplaceVariable m3 -> m2
   * Goal 40. [Output]: MatrixCalc.multiplyMatrices([[III[[III)[[I:NonEmptyArray
   * Goal 41. [METHODNOEX] MatrixCalc.multiplyMatrices([[III[[III)[[I
   * Goal 42. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 43. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 112
   * Goal 44. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 111
   * Goal 45. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 115
   * Goal 46. MatrixCalc.multiplyMatrices([[III[[III)[[I: Line 116
   * Goal 47. Weak Mutation 292: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 48. Weak Mutation 293: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 49. Weak Mutation 299: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> i
   * Goal 50. Weak Mutation 301: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable col2 -> sum
   * Goal 51. Weak Mutation 307: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceComparisonOperator >= -> -1
   * Goal 52. Weak Mutation 310: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 311: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 54. Weak Mutation 312: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 55. Weak Mutation 313: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 56. Weak Mutation 314: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 57. Weak Mutation 315: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 58. Weak Mutation 316: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 59. Weak Mutation 317: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of j
   * Goal 60. Weak Mutation 318: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 j
   * Goal 61. Weak Mutation 319: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 j
   * Goal 62. Weak Mutation 320: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> i
   * Goal 63. Weak Mutation 321: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> j
   * Goal 64. Weak Mutation 322: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> sum
   * Goal 65. Weak Mutation 323: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col2
   * Goal 66. Weak Mutation 324: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> row2
   * Goal 67. Weak Mutation 325: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable row1 -> col1
   * Goal 68. Weak Mutation 326: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp Negation of row1
   * Goal 69. Weak Mutation 327: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC 1 row1
   * Goal 70. Weak Mutation 328: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - InsertUnaryOp IINC -1 row1
   * Goal 71. Weak Mutation 329: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 330: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceComparisonOperator >= -> >
   * Goal 73. Weak Mutation 332: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 333: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> row1
   * Goal 75. Weak Mutation 334: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> i
   * Goal 76. Weak Mutation 337: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable k -> col2
   * Goal 77. Weak Mutation 340: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of k
   * Goal 78. Weak Mutation 341: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 k
   * Goal 79. Weak Mutation 342: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 k
   * Goal 80. Weak Mutation 343: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> row1
   * Goal 81. Weak Mutation 344: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> i
   * Goal 82. Weak Mutation 348: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceVariable row2 -> col2
   * Goal 83. Weak Mutation 350: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp Negation of row2
   * Goal 84. Weak Mutation 351: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC 1 row2
   * Goal 85. Weak Mutation 352: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - InsertUnaryOp IINC -1 row2
   * Goal 86. Weak Mutation 354: MatrixCalc.multiplyMatrices([[III[[III)[[I:112 - ReplaceComparisonOperator >= -> >
   * Goal 87. Weak Mutation 425: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m1
   * Goal 88. Weak Mutation 426: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable m3 -> m2
   * Goal 89. Weak Mutation 427: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> row1
   * Goal 90. Weak Mutation 428: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> i
   * Goal 91. Weak Mutation 430: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable j -> col2
   * Goal 92. Weak Mutation 433: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of j
   * Goal 93. Weak Mutation 434: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 j
   * Goal 94. Weak Mutation 435: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 j
   * Goal 95. Weak Mutation 436: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row1
   * Goal 96. Weak Mutation 437: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> j
   * Goal 97. Weak Mutation 438: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> sum
   * Goal 98. Weak Mutation 439: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col2
   * Goal 99. Weak Mutation 440: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> row2
   * Goal 100. Weak Mutation 441: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable i -> col1
   * Goal 101. Weak Mutation 442: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of i
   * Goal 102. Weak Mutation 443: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 i
   * Goal 103. Weak Mutation 444: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 i
   * Goal 104. Weak Mutation 445: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> row1
   * Goal 105. Weak Mutation 446: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> i
   * Goal 106. Weak Mutation 448: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - ReplaceVariable sum -> col2
   * Goal 107. Weak Mutation 451: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp Negation of sum
   * Goal 108. Weak Mutation 452: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC 1 sum
   * Goal 109. Weak Mutation 453: MatrixCalc.multiplyMatrices([[III[[III)[[I:115 - InsertUnaryOp IINC -1 sum
   * Goal 110. Weak Mutation 454: MatrixCalc.multiplyMatrices([[III[[III)[[I:116 - ReplaceConstant - 0 -> 1
   * Goal 111. Weak Mutation 455: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row1
   * Goal 112. Weak Mutation 456: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> i
   * Goal 113. Weak Mutation 457: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> sum
   * Goal 114. Weak Mutation 458: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col2
   * Goal 115. Weak Mutation 459: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> row2
   * Goal 116. Weak Mutation 460: MatrixCalc.multiplyMatrices([[III[[III)[[I:111 - ReplaceVariable j -> col1
   * Goal 117. Weak Mutation 461: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row1
   * Goal 118. Weak Mutation 462: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> sum
   * Goal 119. Weak Mutation 463: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col2
   * Goal 120. Weak Mutation 464: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> row2
   * Goal 121. Weak Mutation 465: MatrixCalc.multiplyMatrices([[III[[III)[[I:110 - ReplaceVariable i -> col1
   * Goal 122. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 123. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I33 Branch 14 IF_ICMPGE L112 - true in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 124. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I25 Branch 13 IF_ICMPGE L111 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   * Goal 125. Branch MatrixCalc.multiplyMatrices([[III[[III)[[I: I17 Branch 12 IF_ICMPGE L110 - false in context: MatrixCalc:multiplyMatrices([[III[[III)[[I
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 3;
      intArray1[1] = 1;
      intArray1[2] = 1012;
      intArray1[3] = 0;
      int[][] intArray2 = MatrixCalc.multiplyMatrices(intArray0, 1, 0, intArray0, 0, 3);
      assertNotSame(intArray2, intArray0);
  }

  //Test case number: 21
  /*
   * 16 covered goals:
   * Goal 1. MatrixCalc.inputs()[I: I33 Branch 3 IF_ICMPNE L41 - true
   * Goal 2. MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - true
   * Goal 3. MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - true
   * Goal 4. MatrixCalc.inputs()[I: I19 Branch 1 IF_ICMPGE L37 - false
   * Goal 5. MatrixCalc.inputs()[I: I23 Branch 2 IFNE L38 - false
   * Goal 6. MatrixCalc.inputs()[I: I43 Branch 4 IF_ICMPGE L44 - false
   * Goal 7. MatrixCalc.inputs()[I: I47 Branch 5 IFNE L45 - false
   * Goal 8. MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false
   * Goal 9. inputs()[I_java.util.NoSuchElementException_IMPLICIT
   * Goal 10. MatrixCalc.printMatrix([[III)V: Line 98
   * Goal 11. Weak Mutation 241: MatrixCalc.printMatrix([[III)V:94 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 258: MatrixCalc.printMatrix([[III)V:95 - ReplaceComparisonOperator >= -> ==
   * Goal 13. Weak Mutation 275: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> col
   * Goal 14. Weak Mutation 276: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> row
   * Goal 15. Branch MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - true in context: MatrixCalc:printMatrix([[III)V
   * Goal 16. Branch MatrixCalc.inputs()[I: I19 Branch 1 IF_ICMPGE L37 - false in context: MatrixCalc:inputs()[I
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[4];
      intArray1[1] = 0;
      intArray0[1] = intArray1;
      intArray0[2] = intArray1;
      intArray0[3] = intArray1;
      MatrixCalc.printMatrix(intArray0, 3, (-3));
      // Undeclared exception!
      try { 
        MatrixCalc.inputs();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Scanner", e);
      }
  }

  //Test case number: 22
  /*
   * 47 covered goals:
   * Goal 1. MatrixCalc.inputs()[I: I33 Branch 3 IF_ICMPNE L41 - true
   * Goal 2. MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - true
   * Goal 3. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true
   * Goal 4. MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - true
   * Goal 5. MatrixCalc.inputs()[I: I19 Branch 1 IF_ICMPGE L37 - false
   * Goal 6. MatrixCalc.inputs()[I: I23 Branch 2 IFNE L38 - false
   * Goal 7. MatrixCalc.inputs()[I: I43 Branch 4 IF_ICMPGE L44 - false
   * Goal 8. MatrixCalc.inputs()[I: I47 Branch 5 IFNE L45 - false
   * Goal 9. MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - false
   * Goal 10. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false
   * Goal 11. MatrixCalc.matrixInput([[III)[[I: Line 87
   * Goal 12. Weak Mutation 153: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> col
   * Goal 13. Weak Mutation 159: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 170: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> row
   * Goal 15. Weak Mutation 175: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 227: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 17. Weak Mutation 228: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 18. [Output]: MatrixCalc.matrixInput([[III)[[I:NonEmptyArray
   * Goal 19. [METHODNOEX] MatrixCalc.matrixInput([[III)[[I
   * Goal 20. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - true in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 21. Branch MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - true in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 22. MatrixCalc.printArr([I)V: Line 66
   * Goal 23. MatrixCalc.printArr([I)V: Line 67
   * Goal 24. MatrixCalc.printArr([I)V: Line 69
   * Goal 25. MatrixCalc.printArr([I)V: Line 70
   * Goal 26. Weak Mutation 135: MatrixCalc.printArr([I)V:66 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 136: MatrixCalc.printArr([I)V:66 - InsertUnaryOp Negation of i
   * Goal 28. Weak Mutation 137: MatrixCalc.printArr([I)V:66 - InsertUnaryOp IINC 1 i
   * Goal 29. Weak Mutation 138: MatrixCalc.printArr([I)V:66 - InsertUnaryOp IINC -1 i
   * Goal 30. Weak Mutation 139: MatrixCalc.printArr([I)V:66 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 140: MatrixCalc.printArr([I)V:66 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 142: MatrixCalc.printArr([I)V:67 - InsertUnaryOp Negation of i
   * Goal 33. Weak Mutation 143: MatrixCalc.printArr([I)V:67 - InsertUnaryOp IINC 1 i
   * Goal 34. Weak Mutation 144: MatrixCalc.printArr([I)V:67 - InsertUnaryOp IINC -1 i
   * Goal 35. Weak Mutation 145: MatrixCalc.printArr([I)V:67 - ReplaceConstant -   -> 
   * Goal 36. [METHOD] MatrixCalc.printArr([I)V
   * Goal 37. [METHODNOEX] MatrixCalc.printArr([I)V
   * Goal 38. Branch MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - false in context: MatrixCalc:printArr([I)V
   * Goal 39. Branch MatrixCalc.printArr([I)V: I8 Branch 7 IF_ICMPGE L66 - true in context: MatrixCalc:printArr([I)V
   * Goal 40. [METHOD] MatrixCalc.inputs()[I
   * Goal 41. Branch MatrixCalc.inputs()[I: I47 Branch 5 IFNE L45 - false in context: MatrixCalc:inputs()[I
   * Goal 42. Branch MatrixCalc.inputs()[I: I23 Branch 2 IFNE L38 - false in context: MatrixCalc:inputs()[I
   * Goal 43. Branch MatrixCalc.inputs()[I: I19 Branch 1 IF_ICMPGE L37 - false in context: MatrixCalc:inputs()[I
   * Goal 44. Branch MatrixCalc.inputs()[I: I33 Branch 3 IF_ICMPNE L41 - true in context: MatrixCalc:inputs()[I
   * Goal 45. Branch MatrixCalc.inputs()[I: I43 Branch 4 IF_ICMPGE L44 - false in context: MatrixCalc:inputs()[I
   * Goal 46. Weak Mutation 163: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> i
   * Goal 47. inputs()[I_java.util.InputMismatchException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[7];
      intArray1[6] = (-1);
      intArray1[0] = 0;
      SystemInUtil.addInputLine("c[9?NL");
      intArray1[2] = (-150);
      intArray1[3] = (-150);
      intArray1[5] = 0;
      intArray1[6] = 275;
      intArray0[0] = intArray1;
      MatrixCalc.matrixInput(intArray0, 498, 0);
      MatrixCalc.printArr(intArray1);
      // Undeclared exception!
      try { 
        MatrixCalc.inputs();
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Scanner", e);
      }
  }

  //Test case number: 23
  /*
   * 59 covered goals:
   * Goal 1. MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false
   * Goal 2. MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - false
   * Goal 3. MatrixCalc.matrixInput([[III)[[I: Line 80
   * Goal 4. MatrixCalc.matrixInput([[III)[[I: Line 76
   * Goal 5. MatrixCalc.matrixInput([[III)[[I: Line 77
   * Goal 6. MatrixCalc.matrixInput([[III)[[I: Line 81
   * Goal 7. Weak Mutation 146: MatrixCalc.matrixInput([[III)[[I:76 - ReplaceConstant - Enter whole numbers for the matrix -> 
   * Goal 8. Weak Mutation 147: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceConstant - 0 -> 1
   * Goal 9. Weak Mutation 148: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> col
   * Goal 10. Weak Mutation 149: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable i -> row
   * Goal 11. Weak Mutation 150: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of i
   * Goal 12. Weak Mutation 151: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 i
   * Goal 13. Weak Mutation 152: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 i
   * Goal 14. Weak Mutation 154: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceVariable row -> i
   * Goal 15. Weak Mutation 155: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp Negation of row
   * Goal 16. Weak Mutation 156: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC 1 row
   * Goal 17. Weak Mutation 157: MatrixCalc.matrixInput([[III)[[I:80 - InsertUnaryOp IINC -1 row
   * Goal 18. Weak Mutation 158: MatrixCalc.matrixInput([[III)[[I:80 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 161: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 164: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> row
   * Goal 21. Weak Mutation 165: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of j
   * Goal 22. Weak Mutation 166: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 j
   * Goal 23. Weak Mutation 167: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 j
   * Goal 24. Weak Mutation 171: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp Negation of col
   * Goal 25. Weak Mutation 172: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC 1 col
   * Goal 26. Weak Mutation 173: MatrixCalc.matrixInput([[III)[[I:81 - InsertUnaryOp IINC -1 col
   * Goal 27. [METHOD] MatrixCalc.matrixInput([[III)[[I
   * Goal 28. Branch MatrixCalc.matrixInput([[III)[[I: I19 Branch 8 IF_ICMPGE L80 - false in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 29. Weak Mutation 162: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable j -> col
   * Goal 30. Weak Mutation 168: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> i
   * Goal 31. Weak Mutation 169: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceVariable col -> j
   * Goal 32. MatrixCalc.matrixInput([[III)[[I: Line 82
   * Goal 33. MatrixCalc.matrixInput([[III)[[I: Line 83
   * Goal 34. Weak Mutation 174: MatrixCalc.matrixInput([[III)[[I:81 - ReplaceComparisonOperator >= -> -1
   * Goal 35. Weak Mutation 177: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant - Row:  -> 
   * Goal 36. Weak Mutation 178: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable i -> col
   * Goal 37. Weak Mutation 180: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable i -> row
   * Goal 38. Weak Mutation 181: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp Negation of i
   * Goal 39. Weak Mutation 182: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC 1 i
   * Goal 40. Weak Mutation 183: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC -1 i
   * Goal 41. Weak Mutation 184: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 185: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> %
   * Goal 43. Weak Mutation 186: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> -
   * Goal 44. Weak Mutation 187: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> *
   * Goal 45. Weak Mutation 188: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> /
   * Goal 46. Weak Mutation 189: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant -  Column:  -> 
   * Goal 47. Weak Mutation 190: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable j -> col
   * Goal 48. Weak Mutation 192: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceVariable j -> row
   * Goal 49. Weak Mutation 193: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp Negation of j
   * Goal 50. Weak Mutation 194: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC 1 j
   * Goal 51. Weak Mutation 195: MatrixCalc.matrixInput([[III)[[I:82 - InsertUnaryOp IINC -1 j
   * Goal 52. Weak Mutation 196: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant - 1 -> 0
   * Goal 53. Weak Mutation 197: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> %
   * Goal 54. Weak Mutation 198: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> -
   * Goal 55. Weak Mutation 199: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> *
   * Goal 56. Weak Mutation 200: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceArithmeticOperator + -> /
   * Goal 57. Weak Mutation 201: MatrixCalc.matrixInput([[III)[[I:82 - ReplaceConstant -  =  -> 
   * Goal 58. Branch MatrixCalc.matrixInput([[III)[[I: I27 Branch 9 IF_ICMPGE L81 - false in context: MatrixCalc:matrixInput([[III)[[I
   * Goal 59. matrixInput([[III)[[I_java.util.NoSuchElementException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[][] intArray0 = new int[0][6];
      // Undeclared exception!
      try { 
        MatrixCalc.matrixInput(intArray0, 1, 1);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Scanner", e);
      }
  }

  //Test case number: 24
  /*
   * 74 covered goals:
   * Goal 1. MatrixCalc.inputs()[I: Line 35
   * Goal 2. MatrixCalc.inputs()[I: Line 36
   * Goal 3. MatrixCalc.inputs()[I: Line 37
   * Goal 4. MatrixCalc.inputs()[I: Line 38
   * Goal 5. MatrixCalc.inputs()[I: Line 39
   * Goal 6. MatrixCalc.inputs()[I: Line 41
   * Goal 7. MatrixCalc.main([Ljava/lang/String;)V: Line 10
   * Goal 8. MatrixCalc.main([Ljava/lang/String;)V: Line 11
   * Goal 9. MatrixCalc.inputs()[I: Line 44
   * Goal 10. MatrixCalc.main([Ljava/lang/String;)V: Line 12
   * Goal 11. MatrixCalc.inputs()[I: Line 45
   * Goal 12. MatrixCalc.main([Ljava/lang/String;)V: Line 13
   * Goal 13. MatrixCalc.inputs()[I: Line 46
   * Goal 14. MatrixCalc.inputs()[I: Line 57
   * Goal 15. MatrixCalc.main([Ljava/lang/String;)V: root-Branch
   * Goal 16. MatrixCalc.inputs()[I: I33 Branch 3 IF_ICMPNE L41 - true
   * Goal 17. MatrixCalc.inputs()[I: I19 Branch 1 IF_ICMPGE L37 - false
   * Goal 18. MatrixCalc.inputs()[I: I23 Branch 2 IFNE L38 - false
   * Goal 19. MatrixCalc.inputs()[I: I43 Branch 4 IF_ICMPGE L44 - false
   * Goal 20. MatrixCalc.inputs()[I: I47 Branch 5 IFNE L45 - false
   * Goal 21. Weak Mutation 0: MatrixCalc.main([Ljava/lang/String;)V:10 - ReplaceConstant - Hello this program will multiply two matrices -> 
   * Goal 22. Weak Mutation 1: MatrixCalc.main([Ljava/lang/String;)V:11 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 2: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 0
   * Goal 24. Weak Mutation 3: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 1
   * Goal 25. Weak Mutation 4: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> -1
   * Goal 26. Weak Mutation 132: MatrixCalc.inputs()[I:57 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 5: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 3
   * Goal 28. Weak Mutation 133: MatrixCalc.inputs()[I:57 - InsertUnaryOp IINC 1 i
   * Goal 29. Weak Mutation 6: MatrixCalc.main([Ljava/lang/String;)V:12 - ReplaceConstant - 4 -> 5
   * Goal 30. Weak Mutation 134: MatrixCalc.inputs()[I:57 - InsertUnaryOp IINC -1 i
   * Goal 31. Weak Mutation 67: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 0
   * Goal 32. Weak Mutation 68: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 1
   * Goal 33. Weak Mutation 69: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> -1
   * Goal 34. Weak Mutation 70: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 3
   * Goal 35. Weak Mutation 71: MatrixCalc.inputs()[I:35 - ReplaceConstant - 4 -> 5
   * Goal 36. Weak Mutation 72: MatrixCalc.inputs()[I:37 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 73: MatrixCalc.inputs()[I:37 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 74: MatrixCalc.inputs()[I:37 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 75: MatrixCalc.inputs()[I:37 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 76: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 0
   * Goal 41. Weak Mutation 77: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 1
   * Goal 42. Weak Mutation 78: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> -1
   * Goal 43. Weak Mutation 79: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 3
   * Goal 44. Weak Mutation 80: MatrixCalc.inputs()[I:37 - ReplaceConstant - 4 -> 5
   * Goal 45. Weak Mutation 81: MatrixCalc.inputs()[I:37 - ReplaceComparisonOperator >= -> -1
   * Goal 46. Weak Mutation 84: MatrixCalc.inputs()[I:38 - InsertUnaryOp Negation of i
   * Goal 47. Weak Mutation 85: MatrixCalc.inputs()[I:38 - InsertUnaryOp IINC 1 i
   * Goal 48. Weak Mutation 86: MatrixCalc.inputs()[I:38 - InsertUnaryOp IINC -1 i
   * Goal 49. Weak Mutation 87: MatrixCalc.inputs()[I:38 - ReplaceComparisonOperator != -> -1
   * Goal 50. Weak Mutation 90: MatrixCalc.inputs()[I:39 - ReplaceConstant - Enter dimensions for 1st Matrix -> 
   * Goal 51. Weak Mutation 91: MatrixCalc.inputs()[I:41 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 92: MatrixCalc.inputs()[I:41 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 93: MatrixCalc.inputs()[I:41 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 94: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> 0
   * Goal 55. Weak Mutation 95: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> 1
   * Goal 56. Weak Mutation 96: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> -1
   * Goal 57. Weak Mutation 97: MatrixCalc.inputs()[I:41 - ReplaceConstant - 2 -> 3
   * Goal 58. Weak Mutation 100: MatrixCalc.inputs()[I:41 - ReplaceComparisonOperator != -> >
   * Goal 59. Weak Mutation 102: MatrixCalc.inputs()[I:44 - InsertUnaryOp Negation of i
   * Goal 60. Weak Mutation 103: MatrixCalc.inputs()[I:44 - InsertUnaryOp IINC 1 i
   * Goal 61. Weak Mutation 104: MatrixCalc.inputs()[I:44 - InsertUnaryOp IINC -1 i
   * Goal 62. Weak Mutation 105: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> 0
   * Goal 63. Weak Mutation 106: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> 1
   * Goal 64. Weak Mutation 107: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> -1
   * Goal 65. Weak Mutation 108: MatrixCalc.inputs()[I:44 - ReplaceConstant - 2 -> 3
   * Goal 66. Weak Mutation 109: MatrixCalc.inputs()[I:44 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 112: MatrixCalc.inputs()[I:45 - InsertUnaryOp Negation of i
   * Goal 68. Weak Mutation 113: MatrixCalc.inputs()[I:45 - InsertUnaryOp IINC 1 i
   * Goal 69. Weak Mutation 114: MatrixCalc.inputs()[I:45 - InsertUnaryOp IINC -1 i
   * Goal 70. Weak Mutation 115: MatrixCalc.inputs()[I:45 - ReplaceComparisonOperator != -> -1
   * Goal 71. Weak Mutation 118: MatrixCalc.inputs()[I:46 - ReplaceConstant - Rows:  -> 
   * Goal 72. Branch MatrixCalc.main([Ljava/lang/String;)V: root-Branch in context: MatrixCalc:main([Ljava/lang/String;)V
   * Goal 73. [METHOD] MatrixCalc.main([Ljava/lang/String;)V
   * Goal 74. main([Ljava/lang/String;)V_java.util.NoSuchElementException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        MatrixCalc.main((String[]) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Scanner", e);
      }
  }

  //Test case number: 25
  /*
   * 60 covered goals:
   * Goal 1. MatrixCalc.<init>()V: root-Branch
   * Goal 2. MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - true
   * Goal 3. MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false
   * Goal 4. MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - false
   * Goal 5. MatrixCalc.printMatrix([[III)V: Line 100
   * Goal 6. MatrixCalc.printMatrix([[III)V: Line 94
   * Goal 7. Weak Mutation 229: MatrixCalc.printMatrix([[III)V:94 - ReplaceConstant - 0 -> 1
   * Goal 8. Weak Mutation 230: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> col
   * Goal 9. Weak Mutation 231: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable i -> row
   * Goal 10. Weak Mutation 232: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp Negation of i
   * Goal 11. Weak Mutation 233: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC 1 i
   * Goal 12. Weak Mutation 234: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC -1 i
   * Goal 13. Weak Mutation 235: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable row -> col
   * Goal 14. Weak Mutation 236: MatrixCalc.printMatrix([[III)V:94 - ReplaceVariable row -> i
   * Goal 15. Weak Mutation 237: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp Negation of row
   * Goal 16. Weak Mutation 238: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC 1 row
   * Goal 17. Weak Mutation 239: MatrixCalc.printMatrix([[III)V:94 - InsertUnaryOp IINC -1 row
   * Goal 18. Weak Mutation 242: MatrixCalc.printMatrix([[III)V:94 - ReplaceComparisonOperator >= -> ==
   * Goal 19. [METHOD] MatrixCalc.printMatrix([[III)V
   * Goal 20. [METHODNOEX] MatrixCalc.printMatrix([[III)V
   * Goal 21. Branch MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - true in context: MatrixCalc:printMatrix([[III)V
   * Goal 22. MatrixCalc.printMatrix([[III)V: Line 96
   * Goal 23. MatrixCalc.printMatrix([[III)V: Line 95
   * Goal 24. Weak Mutation 240: MatrixCalc.printMatrix([[III)V:94 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 243: MatrixCalc.printMatrix([[III)V:95 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 244: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> col
   * Goal 27. Weak Mutation 246: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> row
   * Goal 28. Weak Mutation 247: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp Negation of j
   * Goal 29. Weak Mutation 248: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC 1 j
   * Goal 30. Weak Mutation 249: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC -1 j
   * Goal 31. Weak Mutation 250: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> i
   * Goal 32. Weak Mutation 251: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> j
   * Goal 33. Weak Mutation 253: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp Negation of col
   * Goal 34. Weak Mutation 254: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC 1 col
   * Goal 35. Weak Mutation 255: MatrixCalc.printMatrix([[III)V:95 - InsertUnaryOp IINC -1 col
   * Goal 36. Weak Mutation 256: MatrixCalc.printMatrix([[III)V:95 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 259: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> col
   * Goal 38. Weak Mutation 261: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> row
   * Goal 39. Weak Mutation 262: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp Negation of i
   * Goal 40. Weak Mutation 263: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC 1 i
   * Goal 41. Weak Mutation 264: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC -1 i
   * Goal 42. Branch MatrixCalc.printMatrix([[III)V: I7 Branch 10 IF_ICMPGE L94 - false in context: MatrixCalc:printMatrix([[III)V
   * Goal 43. Branch MatrixCalc.printMatrix([[III)V: I15 Branch 11 IF_ICMPGE L95 - false in context: MatrixCalc:printMatrix([[III)V
   * Goal 44. printMatrix([[III)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 45. Weak Mutation 245: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> i
   * Goal 46. Weak Mutation 252: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable col -> row
   * Goal 47. [METHOD] MatrixCalc.<init>()V
   * Goal 48. [METHODNOEX] MatrixCalc.<init>()V
   * Goal 49. Branch MatrixCalc.<init>()V: root-Branch in context: MatrixCalc:<init>()V
   * Goal 50. Weak Mutation 260: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable i -> j
   * Goal 51. Weak Mutation 265: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable j -> col
   * Goal 52. Weak Mutation 266: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable j -> i
   * Goal 53. Weak Mutation 267: MatrixCalc.printMatrix([[III)V:96 - ReplaceVariable j -> row
   * Goal 54. Weak Mutation 268: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp Negation of j
   * Goal 55. Weak Mutation 269: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC 1 j
   * Goal 56. Weak Mutation 270: MatrixCalc.printMatrix([[III)V:96 - InsertUnaryOp IINC -1 j
   * Goal 57. Weak Mutation 271: MatrixCalc.printMatrix([[III)V:96 - ReplaceConstant - 	 -> 
   * Goal 58. Weak Mutation 272: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> col
   * Goal 59. Weak Mutation 273: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> i
   * Goal 60. Weak Mutation 274: MatrixCalc.printMatrix([[III)V:95 - ReplaceVariable j -> row
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[2];
      intArray1[0] = 1101;
      MatrixCalc.printMatrix(intArray0, (-2815), 1101);
      MatrixCalc.printMatrix(intArray0, (-1), 1);
      MatrixCalc matrixCalc0 = new MatrixCalc();
      MatrixCalc.printMatrix(intArray0, (-3290), (-2245));
      // Undeclared exception!
      try { 
        MatrixCalc.printMatrix(intArray0, 1101, 1171);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("MatrixCalc", e);
      }
  }
}
